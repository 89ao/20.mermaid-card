{"mappings":"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","sources":["node_modules/mermaid/dist/stateDiagram-133e3642.js","node_modules/lodash-es/_getPrototype.js","node_modules/lodash-es/isPlainObject.js"],"sourcesContent":["import { d as db, p as parser, s as styles } from \"./styles-fa41df25.js\";\nimport { line, curveBasis, select } from \"d3\";\nimport { layout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { c as getConfig, u as utils, e as common, l as log, i as configureSvgSize } from \"./mermaid-b0ad2de1.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nconst idCache = {};\nconst set = (key, val) => {\n  idCache[key] = val;\n};\nconst get = (k) => idCache[k];\nconst keys = () => Object.keys(idCache);\nconst size = () => keys().length;\nconst idCache$1 = {\n  get,\n  set,\n  keys,\n  size\n};\nconst drawStartState = (g) => g.append(\"circle\").attr(\"class\", \"start-state\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit);\nconst drawDivider = (g) => g.append(\"line\").style(\"stroke\", \"grey\").style(\"stroke-dasharray\", \"3\").attr(\"x1\", getConfig().state.textHeight).attr(\"class\", \"divider\").attr(\"x2\", getConfig().state.textHeight * 2).attr(\"y1\", 0).attr(\"y2\", 0);\nconst drawSimpleState = (g, stateDef) => {\n  const state = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 2 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const classBox = state.node().getBBox();\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", classBox.width + 2 * getConfig().state.padding).attr(\"height\", classBox.height + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return state;\n};\nconst drawDescrState = (g, stateDef) => {\n  const addTspan = function(textEl, txt, isFirst2) {\n    const tSpan = textEl.append(\"tspan\").attr(\"x\", 2 * getConfig().state.padding).text(txt);\n    if (!isFirst2) {\n      tSpan.attr(\"dy\", getConfig().state.textHeight);\n    }\n  };\n  const title = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 1.3 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.descriptions[0]);\n  const titleBox = title.node().getBBox();\n  const titleHeight = titleBox.height;\n  const description = g.append(\"text\").attr(\"x\", getConfig().state.padding).attr(\n    \"y\",\n    titleHeight + getConfig().state.padding * 0.4 + getConfig().state.dividerMargin + getConfig().state.textHeight\n  ).attr(\"class\", \"state-description\");\n  let isFirst = true;\n  let isSecond = true;\n  stateDef.descriptions.forEach(function(descr) {\n    if (!isFirst) {\n      addTspan(description, descr, isSecond);\n      isSecond = false;\n    }\n    isFirst = false;\n  });\n  const descrLine = g.append(\"line\").attr(\"x1\", getConfig().state.padding).attr(\"y1\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"y2\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"class\", \"descr-divider\");\n  const descrBox = description.node().getBBox();\n  const width = Math.max(descrBox.width, titleBox.width);\n  descrLine.attr(\"x2\", width + 3 * getConfig().state.padding);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", width + 2 * getConfig().state.padding).attr(\"height\", descrBox.height + titleHeight + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return g;\n};\nconst addTitleAndBox = (g, stateDef, altBkg) => {\n  const pad = getConfig().state.padding;\n  const dblPad = 2 * getConfig().state.padding;\n  const orgBox = g.node().getBBox();\n  const orgWidth = orgBox.width;\n  const orgX = orgBox.x;\n  const title = g.append(\"text\").attr(\"x\", 0).attr(\"y\", getConfig().state.titleShift).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const titleBox = title.node().getBBox();\n  const titleWidth = titleBox.width + dblPad;\n  let width = Math.max(titleWidth, orgWidth);\n  if (width === orgWidth) {\n    width = width + dblPad;\n  }\n  let startX;\n  const graphBox = g.node().getBBox();\n  if (stateDef.doc)\n    ;\n  startX = orgX - pad;\n  if (titleWidth > orgWidth) {\n    startX = (orgWidth - width) / 2 + pad;\n  }\n  if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) {\n    startX = orgX - (titleWidth - orgWidth) / 2;\n  }\n  const lineY = 1 - getConfig().state.textHeight;\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", lineY).attr(\"class\", altBkg ? \"alt-composit\" : \"composit\").attr(\"width\", width).attr(\n    \"height\",\n    graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1\n  ).attr(\"rx\", \"0\");\n  title.attr(\"x\", startX + pad);\n  if (titleWidth <= orgWidth) {\n    title.attr(\"x\", orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n  }\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", getConfig().state.textHeight * 3).attr(\"rx\", getConfig().state.radius);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", graphBox.height + 3 + 2 * getConfig().state.textHeight).attr(\"rx\", getConfig().state.radius);\n  return g;\n};\nconst drawEndState = (g) => {\n  g.append(\"circle\").attr(\"class\", \"end-state-outer\").attr(\"r\", getConfig().state.sizeUnit + getConfig().state.miniPadding).attr(\n    \"cx\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  ).attr(\n    \"cy\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  );\n  return g.append(\"circle\").attr(\"class\", \"end-state-inner\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit + 2).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit + 2);\n};\nconst drawForkJoinState = (g, stateDef) => {\n  let width = getConfig().state.forkWidth;\n  let height = getConfig().state.forkHeight;\n  if (stateDef.parentId) {\n    let tmp = width;\n    width = height;\n    height = tmp;\n  }\n  return g.append(\"rect\").style(\"stroke\", \"black\").style(\"fill\", \"black\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding);\n};\nconst _drawLongText = (_text, x, y, g) => {\n  let textHeight = 0;\n  const textElem = g.append(\"text\");\n  textElem.style(\"text-anchor\", \"start\");\n  textElem.attr(\"class\", \"noteText\");\n  let text = _text.replace(/\\r\\n/g, \"<br/>\");\n  text = text.replace(/\\n/g, \"<br/>\");\n  const lines = text.split(common.lineBreakRegex);\n  let tHeight = 1.25 * getConfig().state.noteMargin;\n  for (const line2 of lines) {\n    const txt = line2.trim();\n    if (txt.length > 0) {\n      const span = textElem.append(\"tspan\");\n      span.text(txt);\n      if (tHeight === 0) {\n        const textBounds = span.node().getBBox();\n        tHeight += textBounds.height;\n      }\n      textHeight += tHeight;\n      span.attr(\"x\", x + getConfig().state.noteMargin);\n      span.attr(\"y\", y + textHeight + 1.25 * getConfig().state.noteMargin);\n    }\n  }\n  return { textWidth: textElem.node().getBBox().width, textHeight };\n};\nconst drawNote = (text, g) => {\n  g.attr(\"class\", \"state-note\");\n  const note = g.append(\"rect\").attr(\"x\", 0).attr(\"y\", getConfig().state.padding);\n  const rectElem = g.append(\"g\");\n  const { textWidth, textHeight } = _drawLongText(text, 0, 0, rectElem);\n  note.attr(\"height\", textHeight + 2 * getConfig().state.noteMargin);\n  note.attr(\"width\", textWidth + getConfig().state.noteMargin * 2);\n  return note;\n};\nconst drawState = function(elem, stateDef) {\n  const id = stateDef.id;\n  const stateInfo = {\n    id,\n    label: stateDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"stateGroup\");\n  if (stateDef.type === \"start\") {\n    drawStartState(g);\n  }\n  if (stateDef.type === \"end\") {\n    drawEndState(g);\n  }\n  if (stateDef.type === \"fork\" || stateDef.type === \"join\") {\n    drawForkJoinState(g, stateDef);\n  }\n  if (stateDef.type === \"note\") {\n    drawNote(stateDef.note.text, g);\n  }\n  if (stateDef.type === \"divider\") {\n    drawDivider(g);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length === 0) {\n    drawSimpleState(g, stateDef);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length > 0) {\n    drawDescrState(g, stateDef);\n  }\n  const stateBox = g.node().getBBox();\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\n  idCache$1.set(id, stateInfo);\n  return stateInfo;\n};\nlet edgeCount = 0;\nconst drawEdge = function(elem, path, relation) {\n  const getRelationType = function(type) {\n    switch (type) {\n      case db.relationType.AGGREGATION:\n        return \"aggregation\";\n      case db.relationType.EXTENSION:\n        return \"extension\";\n      case db.relationType.COMPOSITION:\n        return \"composition\";\n      case db.relationType.DEPENDENCY:\n        return \"dependency\";\n    }\n  };\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line().x(function(d) {\n    return d.x;\n  }).y(function(d) {\n    return d.y;\n  }).curve(curveBasis);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"transition\");\n  let url = \"\";\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  svgPath.attr(\n    \"marker-end\",\n    \"url(\" + url + \"#\" + getRelationType(db.relationType.DEPENDENCY) + \"End)\"\n  );\n  if (relation.title !== void 0) {\n    const label = elem.append(\"g\").attr(\"class\", \"stateLabel\");\n    const { x, y } = utils.calcLabelPosition(path.points);\n    const rows = common.getRows(relation.title);\n    let titleHeight = 0;\n    const titleRows = [];\n    let maxWidth = 0;\n    let minX = 0;\n    for (let i = 0; i <= rows.length; i++) {\n      const title = label.append(\"text\").attr(\"text-anchor\", \"middle\").text(rows[i]).attr(\"x\", x).attr(\"y\", y + titleHeight);\n      const boundstmp = title.node().getBBox();\n      maxWidth = Math.max(maxWidth, boundstmp.width);\n      minX = Math.min(minX, boundstmp.x);\n      log.info(boundstmp.x, x, y + titleHeight);\n      if (titleHeight === 0) {\n        const titleBox = title.node().getBBox();\n        titleHeight = titleBox.height;\n        log.info(\"Title height\", titleHeight, y);\n      }\n      titleRows.push(title);\n    }\n    let boxHeight = titleHeight * rows.length;\n    if (rows.length > 1) {\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n      titleRows.forEach((title, i) => title.attr(\"y\", y + i * titleHeight - heightAdj));\n      boxHeight = titleHeight * rows.length;\n    }\n    const bounds = label.node().getBBox();\n    label.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", x - maxWidth / 2 - getConfig().state.padding / 2).attr(\"y\", y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5).attr(\"width\", maxWidth + getConfig().state.padding).attr(\"height\", boxHeight + getConfig().state.padding);\n    log.info(bounds);\n  }\n  edgeCount++;\n};\nlet conf;\nconst transformationLog = {};\nconst setConf = function() {\n};\nconst insertMarkers = function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n};\nconst draw = function(text, id, _version, diagObj) {\n  conf = getConfig().state;\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  log.debug(\"Rendering diagram \" + text);\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const graph = new graphlib.Graph({\n    multigraph: true,\n    compound: true,\n    // acyclicer: 'greedy',\n    rankdir: \"RL\"\n    // ranksep: '20'\n  });\n  graph.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const rootDoc = diagObj.db.getRootDoc();\n  renderDoc(rootDoc, diagram2, void 0, false, root, doc, diagObj);\n  const padding = conf.padding;\n  const bounds = diagram2.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  const svgWidth = width * 1.75;\n  configureSvgSize(diagram2, height, svgWidth, conf.useMaxWidth);\n  diagram2.attr(\n    \"viewBox\",\n    `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + \" \" + height\n  );\n};\nconst getLabelWidth = (text) => {\n  return text ? text.length * conf.fontSizeFactor : 1;\n};\nconst renderDoc = (doc, diagram2, parentId, altBkg, root, domDocument, diagObj) => {\n  const graph = new graphlib.Graph({\n    compound: true,\n    multigraph: true\n  });\n  let i;\n  let edgeFreeDoc = true;\n  for (i = 0; i < doc.length; i++) {\n    if (doc[i].stmt === \"relation\") {\n      edgeFreeDoc = false;\n      break;\n    }\n  }\n  if (parentId) {\n    graph.setGraph({\n      rankdir: \"LR\",\n      multigraph: true,\n      compound: true,\n      // acyclicer: 'greedy',\n      ranker: \"tight-tree\",\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      isMultiGraph: true\n      // ranksep: 5,\n      // nodesep: 1\n    });\n  } else {\n    graph.setGraph({\n      rankdir: \"TB\",\n      multigraph: true,\n      compound: true,\n      // isCompound: true,\n      // acyclicer: 'greedy',\n      // ranker: 'longest-path'\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      ranker: \"tight-tree\",\n      // ranker: 'network-simplex'\n      isMultiGraph: true\n    });\n  }\n  graph.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  diagObj.db.extract(doc);\n  const states = diagObj.db.getStates();\n  const relations = diagObj.db.getRelations();\n  const keys2 = Object.keys(states);\n  for (const key of keys2) {\n    const stateDef = states[key];\n    if (parentId) {\n      stateDef.parentId = parentId;\n    }\n    let node;\n    if (stateDef.doc) {\n      let sub = diagram2.append(\"g\").attr(\"id\", stateDef.id).attr(\"class\", \"stateGroup\");\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\n      {\n        sub = addTitleAndBox(sub, stateDef, altBkg);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height + conf.padding / 2;\n        transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      }\n    } else {\n      node = drawState(diagram2, stateDef);\n    }\n    if (stateDef.note) {\n      const noteDef = {\n        descriptions: [],\n        id: stateDef.id + \"-note\",\n        note: stateDef.note,\n        type: \"note\"\n      };\n      const note = drawState(diagram2, noteDef);\n      if (stateDef.note.position === \"left of\") {\n        graph.setNode(node.id + \"-note\", note);\n        graph.setNode(node.id, node);\n      } else {\n        graph.setNode(node.id, node);\n        graph.setNode(node.id + \"-note\", note);\n      }\n      graph.setParent(node.id, node.id + \"-group\");\n      graph.setParent(node.id + \"-note\", node.id + \"-group\");\n    } else {\n      graph.setNode(node.id, node);\n    }\n  }\n  log.debug(\"Count=\", graph.nodeCount(), graph);\n  let cnt = 0;\n  relations.forEach(function(relation) {\n    cnt++;\n    log.debug(\"Setting edge\", relation);\n    graph.setEdge(\n      relation.id1,\n      relation.id2,\n      {\n        relation,\n        width: getLabelWidth(relation.title),\n        height: conf.labelHeight * common.getRows(relation.title).length,\n        labelpos: \"c\"\n      },\n      \"id\" + cnt\n    );\n  });\n  layout(graph);\n  log.debug(\"Graph after layout\", graph.nodes());\n  const svgElem = diagram2.node();\n  graph.nodes().forEach(function(v) {\n    if (v !== void 0 && graph.node(v) !== void 0) {\n      log.warn(\"Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\n        \"transform\",\n        \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y + (transformationLog[v] ? transformationLog[v].y : 0) - graph.node(v).height / 2) + \" )\"\n      );\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"data-x-shift\", graph.node(v).x - graph.node(v).width / 2);\n      const dividers = domDocument.querySelectorAll(\"#\" + svgElem.id + \" #\" + v + \" .divider\");\n      dividers.forEach((divider) => {\n        const parent = divider.parentElement;\n        let pWidth = 0;\n        let pShift = 0;\n        if (parent) {\n          if (parent.parentElement) {\n            pWidth = parent.parentElement.getBBox().width;\n          }\n          pShift = parseInt(parent.getAttribute(\"data-x-shift\"), 10);\n          if (Number.isNaN(pShift)) {\n            pShift = 0;\n          }\n        }\n        divider.setAttribute(\"x1\", 0 - pShift + 8);\n        divider.setAttribute(\"x2\", pWidth - pShift - 8);\n      });\n    } else {\n      log.debug(\"No Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n    }\n  });\n  let stateBox = svgElem.getBBox();\n  graph.edges().forEach(function(e) {\n    if (e !== void 0 && graph.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n      drawEdge(diagram2, graph.edge(e), graph.edge(e).relation);\n    }\n  });\n  stateBox = svgElem.getBBox();\n  const stateInfo = {\n    id: parentId ? parentId : \"root\",\n    label: parentId ? parentId : \"root\",\n    width: 0,\n    height: 0\n  };\n  stateInfo.width = stateBox.width + 2 * conf.padding;\n  stateInfo.height = stateBox.height + 2 * conf.padding;\n  log.debug(\"Doc rendered\", stateInfo, graph);\n  return stateInfo;\n};\nconst renderer = {\n  setConf,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n"],"names":[],"version":3,"file":"stateDiagram-133e3642.5a465663.js.map"}